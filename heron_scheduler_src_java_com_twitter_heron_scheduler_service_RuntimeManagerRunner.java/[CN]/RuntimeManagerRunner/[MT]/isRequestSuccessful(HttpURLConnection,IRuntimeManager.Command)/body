{
  LOG.info(String.format("Received %s response from scheduler...",command.name()));
  Common.StatusCode statusCode;
  try {
switch (command) {
case ACTIVATE:
      statusCode=Scheduler.ActivateTopologyResponse.newBuilder().mergeFrom(NetworkUtility.readHttpResponse(connection)).build().getStatus().getStatus();
    break;
case DEACTIVATE:
  statusCode=Scheduler.DeactivateTopologyResponse.newBuilder().mergeFrom(NetworkUtility.readHttpResponse(connection)).build().getStatus().getStatus();
break;
case RESTART:
statusCode=Scheduler.RestartTopologyResponse.newBuilder().mergeFrom(NetworkUtility.readHttpResponse(connection)).build().getStatus().getStatus();
break;
case KILL:
statusCode=Scheduler.KillTopologyResponse.newBuilder().mergeFrom(NetworkUtility.readHttpResponse(connection)).build().getStatus().getStatus();
break;
default :
throw new IllegalArgumentException("Unknown command to manage topology");
}
}
 catch (Exception e) {
LOG.log(Level.SEVERE,String.format("Failed to parse the %s response: ",command.name()) + e);
return false;
}
return statusCode.equals(Common.StatusCode.OK);
}
