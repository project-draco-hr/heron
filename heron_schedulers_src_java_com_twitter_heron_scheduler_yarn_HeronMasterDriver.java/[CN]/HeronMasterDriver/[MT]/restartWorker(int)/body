{
  LOG.log(Level.INFO,"Find & restart container for id={0}",id);
  Optional<HeronWorker> worker=multiKeyWorkerMap.lookupByWorkerId(id);
  if (!worker.isPresent()) {
    LOG.log(Level.WARNING,"Requesting a new container for: {0}",id);
    Optional<ContainerPlan> containerPlan=packing.getContainer(id);
    if (!containerPlan.isPresent()) {
      throw new IllegalArgumentException(String.format("There is no container for %s in packing plan.",id));
    }
    Resource resource=containerPlan.get().getRequiredResource();
    worker=Optional.of(new HeronWorker(id,getCpuForExecutor(resource),getMemInMBForExecutor(resource)));
  }
 else {
    AllocatedEvaluator evaluator=multiKeyWorkerMap.detachEvaluatorAndRemove(worker.get());
    LOG.log(Level.INFO,"Shutting down container {0}",evaluator.getId());
    evaluator.close();
  }
  launchContainerForExecutor(worker.get());
}
