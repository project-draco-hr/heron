{
  String topologyId=null;
  long offset=spoutConfig.startOffsetTime;
  long offsetToReturn=0;
  try {
    Map<Object,Object> json=readStore();
    if (json != null) {
      topologyId=((Map<Object,Object>)json.get("topology")).get("id").toString();
      offset=Long.parseLong(json.get("offset").toString());
      LOG.info("Found older value topology = " + topologyId + " offset = "+ offset);
    }
  }
 catch (  Exception e) {
    topologyId=null;
    offset=spoutConfig.startOffsetTime;
    LOG.error("Error reading and/or parsing at ZkNode: " + committedPath(),e);
  }
  if (topologyId == null) {
    offsetToReturn=getOffsetForTimestamp(spoutConfig.startOffsetTime);
    LOG.info("No topology. Setting offset to the value defined in the spout config.");
  }
 else   if (!topologyInstanceId.equals(topologyId) && spoutConfig.forceFromStart) {
    offsetToReturn=getOffsetForTimestamp(spoutConfig.startOffsetTime);
    LOG.info("Topology not matched. Setting offset to the value defined in the spout config.");
  }
 else {
    long earliestOffset=getOffsetForTimestamp(OffsetRequest.EarliestTime());
    if (earliestOffset > offset) {
      offsetToReturn=getOffsetForTimestamp(spoutConfig.startOffsetTime);
      LOG.info("Stored offset (" + offset + ") is older than the earliest available offset ("+ earliestOffset+ "). Using offset "+ offsetToReturn);
    }
 else {
      offsetToReturn=offset;
      LOG.info("Using the offset read from the commit store: " + offsetToReturn);
    }
    try {
      fetchMessageFromKafka(offset);
    }
 catch (    Exception e) {
      LOG.error("Kafka broker offset data may have been corrupted. Starting from latest");
      offsetToReturn=getOffsetForTimestamp(OffsetRequest.LatestTime());
    }
  }
  LOG.info("Starting reading from Kafka partition " + partition + " at offset "+ offsetToReturn);
  return offsetToReturn;
}
