@tornado.gen.coroutine
def get(self):
    dcs = self.get_arguments(constants.PARAM_DC)
    environs = self.get_arguments(constants.PARAM_ENVIRON)
    topNames = self.get_arguments(constants.PARAM_TOPOLOGY)
    ret = {}
    if (len(topNames) > 1):
        if (not dcs):
            message = ('Missing argument' + constants.PARAM_DC)
            self.write_error_response(message)
            return
        if (not environs):
            message = ('Missing argument' + constants.PARAM_ENVIRON)
            self.write_error_response(message)
            return
    ret = {}
    topologies = self.tracker.topologies
    for topology in topologies:
        dc = topology.dc
        environ = topology.environ
        topName = topology.name
        if ((not dc) or (not environ)):
            continue
        if (dcs and (dc not in dcs)):
            continue
        if (environs and (environ not in environs)):
            continue
        if (topNames and (topName not in topNames)):
            continue
        if (dc not in ret):
            ret[dc] = {}
        if (environ not in ret[dc]):
            ret[dc][environ] = {}
        ret[dc][environ][topName] = topology.get_machines()
    self.write_success_response(ret)
