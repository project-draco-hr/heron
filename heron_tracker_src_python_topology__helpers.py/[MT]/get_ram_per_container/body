def get_ram_per_container(topology):
    '\n  The argument is the proto object for topology.\n  Calculate and return RAM per container for the topology based\n  container rammap. Since rammap takes into account all the\n  configs and cases, we just add some ram for stmgr and return it.\n  '
    component_distribution = get_component_distribution(topology)
    rammap = get_component_rammap(topology)
    maxsize = 0
    for (_, container_items) in component_distribution.items():
        ramsize = 0
        for (component_name, _, _) in container_items:
            ramsize += int(rammap[component_name])
        if (ramsize > maxsize):
            maxsize = ramsize
    return (maxsize + constants.RAM_FOR_STMGR)
