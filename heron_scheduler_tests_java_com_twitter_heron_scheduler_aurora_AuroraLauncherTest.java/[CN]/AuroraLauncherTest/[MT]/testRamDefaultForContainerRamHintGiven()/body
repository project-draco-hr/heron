{
  int componentParallelism=2;
  long containerRamRequested=5 * Constants.GB;
  int numStmgr=3;
  Config topologyConfig=new Config();
  topologyConfig.setNumStmgrs(numStmgr);
  topologyConfig.setContainerRamRequested(containerRamRequested);
  Map<String,Integer> spouts=new HashMap<>();
  spouts.put("spout",componentParallelism);
  Map<String,Integer> bolts=new HashMap<>();
  bolts.put("bolt",componentParallelism);
  TopologyAPI.Topology topology=TopologyUtilityTest.createTopology("test",topologyConfig,spouts,bolts);
  AuroraLauncher launcher=AuroraLauncher.class.newInstance();
  DefaultConfigLoader config=createRequiredConfig();
  RoundRobinPacking packing=new RoundRobinPacking();
  LaunchContext context=new LaunchContext(config,topology);
  packing.context=context;
  packing.topology=topology;
  launcher.initialize(context);
  long expectedRam=2 * Constants.GB;
  Assert.assertEquals(expectedRam,packing.getDefaultInstanceRam(packing.getBasePacking()));
  Assert.assertEquals(containerRamRequested,packing.getContainerRamHint(packing.getBasePacking()));
}
