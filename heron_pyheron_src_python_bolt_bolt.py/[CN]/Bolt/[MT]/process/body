@abstractmethod
def process(self, tup):
    'Process a single tuple of input\n\n    It is compatible with StreamParse API.\n\n    The Tuple object contains metadata on it about which component/stream/task it came from.\n    To emit a tuple, call ``self.emit(tuple)``.\n    Note that tick tuples are not passed to this method, as the ``process_tick()`` method is\n    responsible for processing them.\n\n    **Must be implemented by a subclass, otherwise NotImplementedError is raised.**\n\n    :type tup: :class:`pyheron.HeronTuple`\n    :param tup: HeronTuple to process\n    '
    raise NotImplementedError('Bolt not implementing process() method.')
