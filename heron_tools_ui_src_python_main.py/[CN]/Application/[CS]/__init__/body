def __init__(self):
    callbacks = [('/', handlers.MainHandler), ('/topologies', handlers.ListTopologiesHandler), ('/topologies/filestats/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)', handlers.ContainerFileStatsHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/config', handlers.TopologyConfigHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/exceptions', handlers.TopologyExceptionsPageHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)', handlers.TopologyPlanHandler), ('/topologies/metrics', handlers.api.MetricsHandler), ('/topologies/metrics/timeline', handlers.api.MetricsTimelineHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/file', handlers.ContainerFileHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/filedata', handlers.ContainerFileDataHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/filedownload', handlers.ContainerFileDownloadHandler), ('/topologies/list.json', handlers.api.ListTopologiesJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/logicalplan.json', handlers.api.TopologyLogicalPlanJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/physicalplan.json', handlers.api.TopologyPhysicalPlanJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/executionstate.json', handlers.api.TopologyExecutionStateJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/schedulerlocation.json', handlers.api.TopologySchedulerLocationJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/exceptions.json', handlers.api.TopologyExceptionsJsonHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/exceptionsummary.json', handlers.api.TopologyExceptionSummaryHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/pid', handlers.api.PidHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/jstack', handlers.api.JstackHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/jmap', handlers.api.JmapHandler), ('/topologies/([^\\/]+)/([^\\/]+)/([^\\/]+)/([^\\/]+)/histo', handlers.api.MemoryHistogramHandler)]
    settings = dict(template_path=os.path.join(sys.path[0], 'heron/tools/ui/resources/templates'), static_path=os.path.join(sys.path[0], 'heron/tools/ui/resources/static'), gzip=True, debug=True, default_handler_class=handlers.NotFoundHandler)
    tornado.web.Application.__init__(self, callbacks, **settings)
