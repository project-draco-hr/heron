def main():
    ' main '
    (parser, _) = create_parsers()
    (args, remaining) = parser.parse_known_args()
    if (remaining == ['help']):
        parser.print_help()
        parser.exit()
    elif (remaining == ['version']):
        common_utils.print_version()
        parser.exit()
    elif (remaining != []):
        LOG.error('Invalid subcommand')
        sys.exit(1)
    namespace = vars(args)
    if namespace['verbose']:
        configure_logging(logging.DEBUG)
    else:
        configure_logging(logging.INFO)
    LOG.info('Running on port: %d', namespace['port'])
    LOG.info('Using config file: %s', namespace['config_file'])
    define_options(namespace['port'], namespace['config_file'])
    http_server = tornado.httpserver.HTTPServer(Application())
    http_server.listen(namespace['port'])
    tornado.ioloop.IOLoop.instance().start()
