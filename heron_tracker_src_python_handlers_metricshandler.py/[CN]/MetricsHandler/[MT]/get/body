@tornado.gen.coroutine
def get(self):
    try:
        dc = self.get_argument_dc()
        environ = self.get_argument_environ()
        topName = self.get_argument_topology()
        component = self.get_argument_component()
        metricNames = self.get_required_arguments_metricnames()
        topology = self.tracker.getTopologyByDcEnvironAndName(dc, environ, topName)
        interval = int(self.get_argument(constants.PARAM_INTERVAL, default=(-1)))
        instances = self.get_arguments(constants.PARAM_INSTANCE)
        metrics = yield tornado.gen.Task(self.getComponentMetrics, topology.tmaster, component, metricNames, instances, interval)
        self.write_success_response(metrics)
    except Exception as e:
        self.write_error_response(e)
