@tornado.gen.coroutine
def fetch(self, cluster, metric, topology, component, instance, timerange, environ=None):
    components = ([component] if ('*' != component) else yield get_comps(cluster, environ, topology))
    futures = []
    for comp in components:
        query = self.get_query(metric, comp, instance)
        future = get_metrics(cluster, environ, topology, timerange, query)
        futures.append(future)
    results = yield futures
    timelines = []
    for result in results:
        timelines.extend(result['timeline'])
    result = dict(status='success', starttime=timerange[0], endtime=timerange[1], result=dict(timeline=timelines))
    raise tornado.gen.Return(result)
