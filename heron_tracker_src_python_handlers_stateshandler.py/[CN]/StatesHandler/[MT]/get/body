@tornado.gen.coroutine
def get(self):
    clusters = self.get_arguments(constants.PARAM_CLUSTER)
    environs = self.get_arguments(constants.PARAM_ENVIRON)
    role = self.get_argument_role()
    ret = {}
    topologies = self.tracker.topologies
    for topology in topologies:
        cluster = topology.cluster
        environ = topology.environ
        if ((not cluster) or (not environ)):
            continue
        if (clusters and (cluster not in clusters)):
            continue
        if (environs and (environ not in environs)):
            continue
        if (cluster not in ret):
            ret[cluster] = {}
        if (environ not in ret[cluster]):
            ret[cluster][environ] = {}
        try:
            topology_info = self.tracker.getTopologyInfo(topology.name, cluster, role, environ)
            if (topology_info and ('execution_state' in topology_info)):
                ret[cluster][environ][topology.name] = topology_info['execution_state']
        except Exception:
            pass
    self.write_success_response(ret)
