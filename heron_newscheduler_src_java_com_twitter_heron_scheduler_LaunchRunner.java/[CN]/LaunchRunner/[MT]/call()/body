{
  SchedulerStateManagerAdaptor statemgr=Runtime.schedulerStateManagerAdaptor(runtime);
  TopologyAPI.Topology topology=Runtime.topology(runtime);
  String topologyName=Context.topologyName(config);
  packing.initialize(config,runtime);
  PackingPlan packedPlan=packing.pack();
  launcher.initialize(config,runtime);
  Boolean result;
  ExecutionEnvironment.ExecutionState executionState=createExecutionState();
  result=statemgr.setExecutionState(executionState,topologyName);
  if (result == null || !result) {
    LOG.severe("Failed to set execution state");
    return false;
  }
  result=statemgr.setTopology(trimTopology(topology),topologyName);
  if (result == null || !result) {
    LOG.severe("Failed to set topology");
    statemgr.deleteExecutionState(topologyName);
    return false;
  }
  try {
    if (!launcher.launch(packedPlan)) {
      throw new RuntimeException(launcher.getClass().getName() + " failed ");
    }
  }
 catch (  RuntimeException e) {
    statemgr.deleteExecutionState(topologyName);
    statemgr.deleteTopology(topologyName);
    LOG.log(Level.SEVERE,"Failed to launch topology",e);
    return false;
  }
  return true;
}
