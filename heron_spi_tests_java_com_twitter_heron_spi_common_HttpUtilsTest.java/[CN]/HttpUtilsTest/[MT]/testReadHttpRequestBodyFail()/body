{
  HttpExchange exchange=Mockito.mock(HttpExchange.class);
  Headers headers=Mockito.mock(Headers.class);
  Mockito.doReturn(headers).when(exchange).getRequestHeaders();
  Mockito.doReturn("-1").when(headers).getFirst(Matchers.anyString());
  Assert.assertArrayEquals(new byte[0],HttpUtils.readHttpRequestBody(exchange));
  Mockito.doReturn("10").when(headers).getFirst(Matchers.anyString());
  InputStream inputStream=Mockito.mock(InputStream.class);
  Mockito.doReturn(inputStream).when(exchange).getRequestBody();
  Mockito.doThrow(new IOException("Designed IO exception for testing")).when(inputStream).read(Matchers.any(byte[].class),Matchers.anyInt(),Matchers.anyInt());
  Assert.assertArrayEquals(new byte[0],HttpUtils.readHttpRequestBody(exchange));
  Mockito.verify(inputStream,Mockito.atLeastOnce()).close();
}
