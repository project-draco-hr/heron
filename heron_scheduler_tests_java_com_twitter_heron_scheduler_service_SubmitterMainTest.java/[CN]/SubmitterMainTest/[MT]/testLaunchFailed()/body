{
  String topologyPkg="some-file.tar";
  IConfigLoader config=createConfig();
  String configLoader=config.getClass().getName();
  String submitterConfigFile="";
  String configOverride="";
  IUploader mockUploader=spy(new Nullity.NullUploader());
  ILauncher failLauncher=spy(new Nullity.NullLauncher());
  IStateManager dummyStateManager=spy(new DummySchedulerStateManager());
  when(failLauncher.launchTopology(any(PackingPlan.class))).thenReturn(false);
  PowerMockito.spy(SubmitterMain.class);
  PowerMockito.spy(Factory.class);
  PowerMockito.doReturn(config).when(Factory.class,"makeConfigLoader",eq(configLoader));
  PowerMockito.doReturn(dummyStateManager).when(Factory.class,"makeStateManager",anyString());
  PowerMockito.doReturn(mockUploader).when(Factory.class,"makeUploader",anyString());
  PowerMockito.doReturn(failLauncher).when(Factory.class,"makeLauncher",anyString());
  assertTrue(!SubmitterMain.submitTopology(topologyPkg,configLoader,submitterConfigFile,configOverride,createTopology(new Config())));
  inOrder(mockUploader,dummyStateManager,failLauncher);
  verify(mockUploader,times(1)).initialize(any(LaunchContext.class));
  verify(mockUploader,times(1)).uploadPackage(anyString());
  verify(failLauncher,times(1)).initialize(any(LaunchContext.class));
  verify(dummyStateManager,times(1)).setExecutionState(any(ExecutionEnvironment.ExecutionState.class),anyString());
  verify(dummyStateManager,times(1)).setTopology(any(TopologyAPI.Topology.class),anyString());
  verify(failLauncher,times(1)).launchTopology(any(PackingPlan.class));
  verify(dummyStateManager,times(1)).deleteExecutionState(anyString());
  verify(dummyStateManager,times(1)).deleteTopology(anyString());
  verify(mockUploader,times(1)).undo();
}
