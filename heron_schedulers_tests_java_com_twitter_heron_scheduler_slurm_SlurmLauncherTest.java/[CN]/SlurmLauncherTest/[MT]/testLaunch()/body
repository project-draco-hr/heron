{
  Config config=createRunnerConfig();
  Config runtime=Mockito.mock(Config.class);
  PackingPlan packingPlan=Mockito.mock(PackingPlan.class);
  PackingPlan plan=new PackingPlan("plan.id",new HashMap<String,PackingPlan.ContainerPlan>(),Mockito.mock(PackingPlan.Resource.class));
  PowerMockito.spy(SlurmContext.class);
  PowerMockito.doReturn(WORKING_DIRECTORY).when(SlurmContext.class,"workingDirectory",config);
  LauncherUtils mockLauncherUtils=Mockito.mock(LauncherUtils.class);
  PowerMockito.spy(LauncherUtils.class);
  PowerMockito.doReturn(mockLauncherUtils).when(LauncherUtils.class,"getInstance");
  SlurmLauncher slurmLauncher=Mockito.spy(new SlurmLauncher());
  slurmLauncher.initialize(config,runtime);
  SlurmScheduler slurmScheduler=Mockito.spy(new SlurmScheduler());
  PowerMockito.doReturn(true).when(slurmScheduler).onSchedule(plan);
  Mockito.doReturn(false).when(slurmLauncher).setupWorkingDirectory();
  Assert.assertFalse(slurmLauncher.launch(packingPlan));
  Mockito.verify(slurmLauncher).setupWorkingDirectory();
  Mockito.when(mockLauncherUtils.onScheduleAsLibrary(Mockito.any(Config.class),Mockito.any(Config.class),Mockito.any(IScheduler.class),Mockito.any(PackingPlan.class))).thenReturn(false);
  PowerMockito.doReturn(true).when(slurmLauncher).setupWorkingDirectory();
  Assert.assertFalse(slurmLauncher.launch(Mockito.mock(PackingPlan.class)));
  Mockito.verify(mockLauncherUtils).onScheduleAsLibrary(Mockito.any(Config.class),Mockito.any(Config.class),Mockito.any(IScheduler.class),Mockito.any(PackingPlan.class));
  Mockito.when(mockLauncherUtils.onScheduleAsLibrary(Mockito.any(Config.class),Mockito.any(Config.class),Mockito.any(IScheduler.class),Mockito.any(PackingPlan.class))).thenReturn(true);
  Assert.assertTrue(slurmLauncher.launch(Mockito.mock(PackingPlan.class)));
  Mockito.verify(slurmLauncher,Mockito.times(3)).launch(Mockito.any(PackingPlan.class));
  Mockito.verify(mockLauncherUtils,Mockito.times(2)).onScheduleAsLibrary(Mockito.any(Config.class),Mockito.any(Config.class),Mockito.any(IScheduler.class),Mockito.any(PackingPlan.class));
  slurmLauncher.close();
}
