{
  int spoutParallelism=4;
  int boltParallelism=3;
  int totalInstances=spoutParallelism + boltParallelism;
  com.twitter.heron.api.Config topologyConfig=new com.twitter.heron.api.Config();
  TopologyAPI.Topology topology=getTopology(spoutParallelism,boltParallelism,topologyConfig);
  PackingPlan packingPlan=getFirstFitDecreasingPackingPlan(topology);
  Assert.assertEquals(packingPlan.getContainers().size(),2);
  long totalRam=(totalInstances + HERON_INTERNAL_CONTAINERS) * instanceRamDefault + (long)((DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceRamDefault));
  Assert.assertEquals(packingPlan.getResource().ram,totalRam);
  double totalCpu=Math.round(spoutParallelism * instanceCpuDefault + (DEFAULT_CONTAINER_PADDING / 100.0 * spoutParallelism * instanceCpuDefault)) + Math.round(boltParallelism * instanceCpuDefault + (DEFAULT_CONTAINER_PADDING / 100.0 * boltParallelism * instanceCpuDefault)) + instanceCpuDefault;
  Assert.assertEquals((long)packingPlan.getResource().cpu,(long)totalCpu);
  long totalDisk=(totalInstances + HERON_INTERNAL_CONTAINERS) * instanceDiskDefault + (long)((DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceDiskDefault));
  Assert.assertEquals(packingPlan.getResource().disk,totalDisk);
}
