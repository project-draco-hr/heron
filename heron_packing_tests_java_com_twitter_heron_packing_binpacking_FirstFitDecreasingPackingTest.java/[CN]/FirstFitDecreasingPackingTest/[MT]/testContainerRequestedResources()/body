{
  int spoutParallelism=4;
  int boltParallelism=3;
  int totalInstances=spoutParallelism + boltParallelism;
  com.twitter.heron.api.Config topologyConfig=new com.twitter.heron.api.Config();
  long containerRam=10L * Constants.GB;
  long containerDisk=20L * Constants.GB;
  float containerCpu=30;
  topologyConfig.setContainerMaxRamHint(containerRam);
  topologyConfig.setContainerMaxDiskHint(containerDisk);
  topologyConfig.setContainerMaxCpuHint(containerCpu);
  TopologyAPI.Topology topologyExplicitResourcesConfig=getTopology(spoutParallelism,boltParallelism,topologyConfig);
  PackingPlan packingPlanExplicitResourcesConfig=getFirstFitDecreasingPackingPlan(topologyExplicitResourcesConfig);
  Assert.assertEquals(packingPlanExplicitResourcesConfig.getContainers().size(),1);
  Assert.assertEquals(Math.round(totalInstances * instanceCpuDefault + (DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceCpuDefault) + instanceCpuDefault),(long)packingPlanExplicitResourcesConfig.getResource().cpu);
  Assert.assertEquals(totalInstances * instanceRamDefault + (long)(DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceRamDefault) + instanceRamDefault,packingPlanExplicitResourcesConfig.getResource().ram);
  Assert.assertEquals(totalInstances * instanceDiskDefault + (long)(DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceDiskDefault) + instanceDiskDefault,packingPlanExplicitResourcesConfig.getResource().disk);
  for (  PackingPlan.ContainerPlan containerPlan : packingPlanExplicitResourcesConfig.getContainers()) {
    Assert.assertEquals(Math.round(totalInstances * instanceCpuDefault + (DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceCpuDefault)),(long)containerPlan.getResource().cpu);
    Assert.assertEquals(totalInstances * instanceRamDefault + (long)(DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceRamDefault),containerPlan.getResource().ram);
    Assert.assertEquals(totalInstances * instanceDiskDefault + (long)(DEFAULT_CONTAINER_PADDING / 100.0 * totalInstances * instanceDiskDefault),containerPlan.getResource().disk);
    Set<Resource> resources=new HashSet<>();
    for (    PackingPlan.InstancePlan instancePlan : containerPlan.getInstances()) {
      resources.add(instancePlan.getResource());
    }
    Assert.assertEquals(1,resources.size());
    Assert.assertEquals(instanceRamDefault,resources.iterator().next().ram);
  }
}
