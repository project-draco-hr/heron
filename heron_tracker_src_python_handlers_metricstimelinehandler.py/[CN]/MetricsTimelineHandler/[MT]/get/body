@tornado.gen.coroutine
def get(self):
    try:
        cluster = self.get_argument_cluster()
        environ = self.get_argument_environ()
        topology_name = self.get_argument_topology()
        component = self.get_argument_component()
        metric_names = self.get_required_arguments_metricnames()
        start_time = self.get_argument_starttime()
        end_time = self.get_argument_endtime()
        self.validateInterval(start_time, end_time)
        instances = self.get_arguments(constants.PARAM_INSTANCE)
        topology = self.tracker.getTopologyByDcEnvironAndName(cluster, environ, topology_name)
        metrics = yield tornado.gen.Task(self.getMetricsTimeline, topology.tmaster, component, metric_names, instances, int(start_time), int(end_time))
        self.write_success_response(metrics)
    except Exception as e:
        self.write_error_response(e)
