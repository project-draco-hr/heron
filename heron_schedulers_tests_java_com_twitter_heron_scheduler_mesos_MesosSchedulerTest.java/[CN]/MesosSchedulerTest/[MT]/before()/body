{
  Config config=Mockito.mock(Config.class);
  Mockito.when(config.getStringValue(ConfigKeys.get("TOPOLOGY_NAME"))).thenReturn(TOPOLOGY_NAME);
  Mockito.when(config.getStringValue(Keys.role())).thenReturn(ROLE);
  Mockito.when(config.getStringValue(Keys.corePackageUri())).thenReturn(CORE_PACKAGE_URI);
  Config runtime=Mockito.mock(Config.class);
  Mockito.when(runtime.getLongValue(Keys.numContainers())).thenReturn(NUM_CONTAINER);
  Properties properties=new Properties();
  properties.put(Keys.topologyPackageUri(),TOPOLOGY_PACKAGE_URI);
  Mockito.when(runtime.get(Keys.SCHEDULER_PROPERTIES)).thenReturn(properties);
  mesosFramework=Mockito.mock(MesosFramework.class);
  driver=Mockito.mock(SchedulerDriver.class);
  baseContainer=Mockito.mock(BaseContainer.class);
  scheduler=Mockito.spy(MesosScheduler.class);
  Mockito.doReturn(mesosFramework).when(scheduler).getMesosFramework();
  Mockito.doReturn(driver).when(scheduler).getSchedulerDriver(Mockito.anyString(),Mockito.eq(mesosFramework));
  Mockito.doNothing().when(scheduler).startSchedulerDriver();
  scheduler.initialize(config,runtime);
}
