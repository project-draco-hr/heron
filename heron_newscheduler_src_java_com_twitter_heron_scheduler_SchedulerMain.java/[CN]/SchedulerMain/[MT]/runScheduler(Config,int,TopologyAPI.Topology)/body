{
  String statemgrClass=Context.stateManagerClass(config);
  IStateManager statemgr=(IStateManager)Class.forName(statemgrClass).newInstance();
  statemgr.initialize(config);
  String packingClass=Context.packingClass(config);
  IPacking packing=(IPacking)Class.forName(packingClass).newInstance();
  Config runtime=Config.newBuilder().put(Keys.topologyId(),topology.getId()).put(Keys.topologyName(),topology.getName()).put(Keys.topologyDefinition(),topology).put(Keys.schedulerStateManagerAdaptor(),new SchedulerStateManagerAdaptor(statemgr)).put(Keys.numContainers(),1 + TopologyUtils.getNumContainers(topology)).build();
  packing.initialize(config,runtime);
  PackingPlan packedPlan=packing.pack();
  Config ytruntime=Config.newBuilder().putAll(runtime).put(Keys.instanceDistribution(),TopologyUtils.packingToString(packedPlan)).put(Keys.schedulerShutdown(),new Shutdown()).build();
  String schedulerClass=Context.schedulerClass(config);
  IScheduler scheduler=(IScheduler)Class.forName(schedulerClass).newInstance();
  scheduler.initialize(config,ytruntime);
  SchedulerServer server=runServer(ytruntime,scheduler,schedulerServerPort);
  setSchedulerLocation(runtime,server);
  scheduler.schedule(packedPlan);
  LOG.info("Waiting for termination... ");
  Runtime.schedulerShutdown(ytruntime).await();
  LOG.info("Shutting down topology: " + topology.getName());
  server.stop();
  statemgr.close();
  System.exit(0);
}
