{
  Options options=constructOptions();
  Options helpOptions=constructHelpOptions();
  CommandLineParser parser=new DefaultParser();
  CommandLine cmd=parser.parse(helpOptions,args,true);
  if (cmd.hasOption("h")) {
    usage(options);
    return;
  }
  try {
    cmd=parser.parse(options,args);
  }
 catch (  ParseException e) {
    LOG.severe("Error parsing command line options: " + e.getMessage());
    usage(options);
    System.exit(1);
  }
  SchedulerMain schedulerMain=new SchedulerMain(cmd.getOptionValue("cluster"),cmd.getOptionValue("role"),cmd.getOptionValue("environment"),cmd.getOptionValue("topology_name"),cmd.getOptionValue("topology_jar"),Integer.parseInt(cmd.getOptionValue("http_port")));
  setupLogging(schedulerMain.config);
  LOG.log(Level.INFO,"Loaded scheduler config: {0}",schedulerMain.config);
  schedulerMain.runScheduler();
}
