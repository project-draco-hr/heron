def runAllTests(conf, args):
    ' Run the test for each topology specified in the conf file '
    successes = []
    failures = []
    timestamp = str(int(time.time()))
    if args.testsBinPath.endswith('.jar'):
        test_topologies = conf['javaTopologies']
        pkg_type = 'jar'
    elif args.testsBinPath.endswith('.pex'):
        test_topologies = conf['pythonTopologies']
        pkg_type = 'pex'
    else:
        raise ValueError(('Unrecognized binary file type: %s' % args.testsBinPath))
    total = len(test_topologies)
    current = 1
    for topologyConf in test_topologies:
        topologyName = ('%s_%s_%s' % (timestamp, topologyConf['topologyName'], str(uuid.uuid4())))
        if (pkg_type == 'pex'):
            classPath = topologyConf['classPath']
        elif (pkg_type == 'jar'):
            classPath = (conf['topologyClasspathPrefix'] + topologyConf['classPath'])
        else:
            raise ValueError(('Unrecognized package type: %s' % pkg_type))
        expectedResultFilePath = ((args.topologiesPath + '/') + topologyConf['expectedResultRelativePath'])
        logging.info('==== Starting test %s of %s: %s ====', current, total, topologyName)
        start_secs = int(time.time())
        if (runTest(topologyName, classPath, expectedResultFilePath, args) == 'success'):
            successes += [(topologyName, (int(time.time()) - start_secs))]
        else:
            failures += [(topologyName, (int(time.time()) - start_secs))]
        current += 1
    return (successes, failures)
