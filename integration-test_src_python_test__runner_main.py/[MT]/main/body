def main():
    root = logging.getLogger()
    root.setLevel(logging.DEBUG)
    print (os.path.join(os.path.dirname(sys.modules[__name__].__file__), DEFAULT_TEST_CONF_FILE), 'rb')
    conf_file = DEFAULT_TEST_CONF_FILE
    confString = pkgutil.get_data(__name__, conf_file)
    decoder = json.JSONDecoder(strict=False)
    conf = decoder.decode(confString)
    parser = argparse.ArgumentParser(description='This is the heron integration test framework')
    parser.add_argument('-hc', '--heron-cli-path', dest='heronCliPath', default=conf['heronCliPath'])
    parser.add_argument('-tj', '--tests-jar-path', dest='testsJarPath')
    parser.add_argument('-cl', '--cluster', dest='cluster', default=conf['cluster'])
    parser.add_argument('-ev', '--env', dest='env', default=conf['env'])
    parser.add_argument('-rl', '--role', dest='role', default=conf['role'])
    parser.add_argument('-rh', '--results-server-hostname', dest='resultsServerHostname')
    parser.add_argument('-rp', '--results-server-port', dest='resultsServerPort', default=conf['resultsServerPort'])
    parser.add_argument('-tp', '--topologies-path', dest='topologiesPath')
    parser.add_argument('-pi', '--release-package-uri', dest='releasePackageUri', default=conf['releasePackageUri'])
    args = parser.parse_args()
    (successes, failures) = runAllTests(conf, args)
    if (not failures):
        logging.info(('Success: %s (all) tests passed' % len(successes)))
        sys.exit(0)
    else:
        logging.error(('Fail: %s test failed' % len(failures)))
        logging.info('Failed Tests: ')
        logging.info('\n'.join(failures))
        sys.exit(1)
