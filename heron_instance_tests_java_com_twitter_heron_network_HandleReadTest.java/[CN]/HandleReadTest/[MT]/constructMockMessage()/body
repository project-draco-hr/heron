{
  StreamManager.TupleMessage.Builder message=StreamManager.TupleMessage.newBuilder();
  HeronTuples.HeronTupleSet.Builder heronTupleSet=HeronTuples.HeronTupleSet.newBuilder();
  HeronTuples.HeronDataTupleSet.Builder dataTupleSet=HeronTuples.HeronDataTupleSet.newBuilder();
  TopologyAPI.StreamId.Builder streamId=TopologyAPI.StreamId.newBuilder();
  streamId.setComponentName("test-spout");
  streamId.setId("default");
  dataTupleSet.setStream(streamId);
  for (int i=0; i < 10; i++) {
    HeronTuples.HeronDataTuple.Builder dataTuple=HeronTuples.HeronDataTuple.newBuilder();
    dataTuple.setKey(19901017 + i);
    HeronTuples.RootId.Builder rootId=HeronTuples.RootId.newBuilder();
    rootId.setKey(19901017 + i);
    rootId.setTaskid(0);
    dataTuple.addRoots(rootId);
    String s="";
    if ((i & 1) == 0) {
      s="A";
    }
 else {
      s="B";
    }
    ByteString byteString=ByteString.copyFrom(s.getBytes());
    dataTuple.addValues(byteString);
    dataTupleSet.addTuples(dataTuple);
  }
  heronTupleSet.setData(dataTupleSet);
  message.setSet(heronTupleSet);
  return message.build();
}
