{
  launcher.initialize(context);
  PackingPlan packing=generatePacking();
  if (!launcher.prepareLaunch(packing)) {
    LOG.severe(launcher.getClass().getName() + " Failed to prepare launch topology locally.");
    return false;
  }
  SchedulerStateManagerAdaptor stateManager=context.getStateManagerAdaptor();
  ExecutionEnvironment.ExecutionState executionState=launcher.updateExecutionState(createBasicExecutionState());
  if (!NetworkUtility.awaitResult(stateManager.setExecutionState(executionState),5,TimeUnit.SECONDS)) {
    LOG.severe("Failed to set execution state");
    return false;
  }
  if (!NetworkUtility.awaitResult(stateManager.setTopology(trimTopology(topology)),5,TimeUnit.SECONDS)) {
    LOG.severe("Failed to set topology");
    stateManager.clearExecutionState();
    return false;
  }
  try {
    if (!launcher.launchTopology(packing)) {
      throw new RuntimeException(launcher.getClass().getName() + " Failed ");
    }
  }
 catch (  RuntimeException e) {
    stateManager.clearExecutionState();
    stateManager.clearTopology();
    LOG.log(Level.SEVERE,"Failed to launch topology remotely",e);
    return false;
  }
  if (!launcher.postLaunch(packing)) {
    LOG.severe(launcher.getClass().getName() + " Failed to post launch topology locally.");
    return false;
  }
  return true;
}
