def test_sane(self):
    topology = self.mock_proto.create_mock_simple_topology()
    topology.name = ''
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    topology.name = 'test.with.a.dot'
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    topology.name = 'test/with/a/slash'
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    topology.spouts.extend([self.mock_proto.create_mock_spout('mock_spout', [], 1)])
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    topology.bolts.extend([self.mock_proto.create_mock_bolt('mock_bolt', [], [], 1)])
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology(1, 1)
    self.mock_proto.add_topology_config(topology, constants.TOPOLOGY_STMGRS, 4)
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    self.mock_proto.add_topology_config(topology, constants.TOPOLOGY_COMPONENT_RAMMAP, 'mock_spout:1')
    self.assertTrue(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    self.mock_proto.add_topology_config(topology, constants.TOPOLOGY_COMPONENT_RAMMAP, 'mock_spout:1:2,mock_bolt:2:3')
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    self.mock_proto.add_topology_config(topology, constants.TOPOLOGY_COMPONENT_RAMMAP, 'wrong_mock_spout:1,mock_bolt:2')
    self.assertFalse(topology_helpers.sane(topology))
    topology = self.mock_proto.create_mock_simple_topology()
    self.mock_proto.add_topology_config(topology, constants.TOPOLOGY_COMPONENT_RAMMAP, 'mock_spout:1,mock_bolt:2')
    self.assertTrue(topology_helpers.sane(topology))
