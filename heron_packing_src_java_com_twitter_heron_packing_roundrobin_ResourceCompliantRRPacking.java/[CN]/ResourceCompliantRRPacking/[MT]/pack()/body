{
  int adjustments=this.numAdjustments;
  Map<Integer,List<String>> containerInstances=getResourceCompliantRRAllocation();
  while (containerInstances == null) {
    if (this.numAdjustments > adjustments) {
      adjustments++;
      containerInstances=getResourceCompliantRRAllocation();
    }
 else {
      return null;
    }
  }
  Map<String,Long> ramMap=TopologyUtils.getComponentRamMapConfig(topology);
  List<TopologyAPI.Config.KeyValue> topologyConfig=topology.getTopologyConfig().getKvsList();
  int paddingPercentage=Integer.parseInt(TopologyUtils.getConfigWithDefault(topologyConfig,com.twitter.heron.api.Config.TOPOLOGY_CONTAINER_PADDING_PERCENTAGE,Integer.toString(DEFAULT_CONTAINER_PADDING_PERCENTAGE)));
  Set<PackingPlan.ContainerPlan> containerPlans=PackingUtils.buildContainerPlans(containerInstances,ramMap,this.defaultInstanceResources,paddingPercentage);
  return new PackingPlan(topology.getId(),containerPlans);
}
