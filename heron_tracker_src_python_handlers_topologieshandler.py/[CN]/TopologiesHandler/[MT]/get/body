@tornado.gen.coroutine
def get(self):
    clusters = self.get_arguments(constants.PARAM_CLUSTER)
    environs = self.get_arguments(constants.PARAM_ENVIRON)
    role = self.get_argument_role()
    ret = {}
    topologies = self.tracker.topologies
    for topology in topologies:
        cluster = topology.cluster
        environ = topology.environ
        topo_role = topology.execution_state.role
        if ((not cluster) or (not topo_role) or (not environ)):
            continue
        if (clusters and (cluster not in clusters)):
            continue
        if (environs and (environ not in environs)):
            continue
        if (role and (role != topo_role)):
            continue
        if (cluster not in ret):
            ret[cluster] = {}
        if (topo_role not in ret[cluster]):
            ret[cluster][topo_role] = {}
        if (environ not in ret[cluster][topo_role]):
            ret[cluster][topo_role][environ] = []
        ret[cluster][topo_role][environ].append(topology.name)
    self.write_success_response(ret)
