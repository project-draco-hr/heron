def heron_tar(class_name, topology_tar, arguments, tmpdir_root, java_defines):
    '\n  :param class_name:\n  :param topology_tar:\n  :param arguments:\n  :param tmpdir_root:\n  :param java_defines:\n  :return:\n  '
    tmpdir = tempfile.mkdtemp(dir=tmpdir_root, prefix='tmp')
    with contextlib.closing(tarfile.open(topology_tar)) as tar:
        tar.extractall(path=tmpdir)
    topology_jar = (os.path.basename(topology_tar).replace('.tar.gz', '').replace('.tar', '') + '.jar')
    extra_jars = [os.path.join(tmpdir, 'heron-instance.jar'), os.path.join(tmpdir, topology_jar), os.path.join(tmpdir, '*'), os.path.join(tmpdir, 'libs/*')]
    lib_jars = config.get_heron_libs(jars.topology_jars())
    heron_class(class_name, lib_jars, extra_jars, arguments, java_defines)
