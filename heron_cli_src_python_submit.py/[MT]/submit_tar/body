def submit_tar(cl_args, unknown_args, tmp_dir):
    '\n  Extract and execute the java files inside the tar and then add topology\n  definition file created by running submitTopology\n\n  We use the packer to make a package for the tar and dump it\n  to a well-known location. We then run the main method of class\n  with the specified arguments. We pass arguments as heron.options.\n  This will run the jar file with the topology class name.\n\n  The submitter inside will write out the topology defn file to a location\n  that we specify. Then we write the topology defn file to a well known\n  packer location. We then write to appropriate places in zookeeper\n  and launch the aurora jobs\n  :param cl_args:\n  :param unknown_args:\n  :param tmp_dir:\n  :return:\n  '
    topology_file = cl_args['topology-file-name']
    java_defines = cl_args['topology_main_jvm_property']
    execute.heron_tar(cl_args['topology-class-name'], topology_file, tuple(unknown_args), tmp_dir, java_defines)
    try:
        try:
            launch_topologies(cl_args, topology_file, tmp_dir)
        except Exception:
            return False
    finally:
        shutil.rmtree(tmp_dir)
    return True
