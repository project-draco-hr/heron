{
  com.twitter.heron.api.generated.TopologyAPI.Topology result=new com.twitter.heron.api.generated.TopologyAPI.Topology(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.id_=id_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.name_=name_;
  if (spoutsBuilder_ == null) {
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      spouts_=java.util.Collections.unmodifiableList(spouts_);
      bitField0_=(bitField0_ & ~0x00000004);
    }
    result.spouts_=spouts_;
  }
 else {
    result.spouts_=spoutsBuilder_.build();
  }
  if (boltsBuilder_ == null) {
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      bolts_=java.util.Collections.unmodifiableList(bolts_);
      bitField0_=(bitField0_ & ~0x00000008);
    }
    result.bolts_=bolts_;
  }
 else {
    result.bolts_=boltsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000004;
  }
  result.state_=state_;
  if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
    to_bitField0_|=0x00000008;
  }
  if (topologyConfigBuilder_ == null) {
    result.topologyConfig_=topologyConfig_;
  }
 else {
    result.topologyConfig_=topologyConfigBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
