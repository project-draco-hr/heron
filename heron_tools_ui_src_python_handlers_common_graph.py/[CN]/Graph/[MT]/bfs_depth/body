def bfs_depth(self, U):
    '\n    Returns the maximum distance between any vertex and U in the connected\n    component containing U\n    :param U:\n    :return:\n    '
    bfs_queue = [[U, 0]]
    visited = set()
    max_depth = 0
    while bfs_queue:
        [V, depth] = bfs_queue.pop()
        if (max_depth < depth):
            max_depth = depth
        visited.add(V)
        adj_set = self.edges[V]
        for W in adj_set:
            if (W not in visited):
                bfs_queue.append([W, (depth + 1)])
    return max_depth
