def __init__(self):
    config = Config(options.config_file)
    self.tracker = Tracker(config)
    self.tracker.synch_topologies()
    tornadoHandlers = [('/', handlers.MainHandler), ('/clusters', handlers.ClustersHandler, {'tracker': self.tracker, }), ('/topologies', handlers.TopologiesHandler, {'tracker': self.tracker, }), ('/topologies/states', handlers.StatesHandler, {'tracker': self.tracker, }), ('/topologies/info', handlers.TopologyHandler, {'tracker': self.tracker, }), ('/topologies/logicalplan', handlers.LogicalPlanHandler, {'tracker': self.tracker, }), ('/topologies/containerfiledata', handlers.ContainerFileDataHandler, {'tracker': self.tracker, }), ('/topologies/containerfilestats', handlers.ContainerFileStatsHandler, {'tracker': self.tracker, }), ('/topologies/physicalplan', handlers.PhysicalPlanHandler, {'tracker': self.tracker, }), ('/topologies/executionstate', handlers.ExecutionStateHandler, {'tracker': self.tracker, }), ('/topologies/schedulerlocation', handlers.SchedulerLocationHandler, {'tracker': self.tracker, }), ('/topologies/metrics', handlers.MetricsHandler, {'tracker': self.tracker, }), ('/topologies/metricstimeline', handlers.MetricsTimelineHandler, {'tracker': self.tracker, }), ('/topologies/metricsquery', handlers.MetricsQueryHandler, {'tracker': self.tracker, }), ('/topologies/exceptions', handlers.ExceptionHandler, {'tracker': self.tracker, }), ('/topologies/exceptionsummary', handlers.ExceptionSummaryHandler, {'tracker': self.tracker, }), ('/machines', handlers.MachinesHandler, {'tracker': self.tracker, }), ('/topologies/pid', handlers.PidHandler, {'tracker': self.tracker, }), ('/topologies/jstack', handlers.JstackHandler, {'tracker': self.tracker, }), ('/topologies/jmap', handlers.JmapHandler, {'tracker': self.tracker, }), ('/topologies/histo', handlers.MemoryHistogramHandler, {'tracker': self.tracker, }), ('(.*)', handlers.DefaultHandler)]
    settings = dict(debug=True, serve_traceback=True, static_path=os.path.dirname(__file__))
    tornado.web.Application.__init__(self, tornadoHandlers, **settings)
    Log.info('Tracker has started')
