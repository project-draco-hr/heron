{
  Map<Object,Object> newConf=new HashMap<>();
  newConf.putAll(conf);
  String dc=(String)conf.get(Constants.DC);
  String zkHost=(String)conf.get(ZKHOST_PREFIX + "." + dc);
  Integer zkPort=Integer.parseInt((String)conf.get(ZKPORT_PREFIX + "." + dc));
  String zkRoot=(String)conf.get((ZKROOT_PREFIX + "." + dc));
  String tunnelHost=(String)conf.get(TUNNEL_PREFIX + "." + dc);
  int timeout=Integer.parseInt((String)conf.get(Constants.ZK_CONNECTION_TIMEOUT_MS));
  boolean isVerbose=Boolean.parseBoolean((String)conf.get(Constants.HERON_VERBOSE));
  if (!NetworkUtility.isLocationReachable(timeout,1,1000,zkHost,zkPort,isVerbose)) {
    LOG.info("Will use tunnelling " + zkHost + ":"+ zkPort);
    int freePort=NetworkUtility.getFreePort();
    if (isVerbose) {
      LOG.info("Opening up tunnel to " + zkHost + " at "+ freePort);
    }
    Process zkTunnel=ShellUtility.setupTunnel(isVerbose,tunnelHost,freePort,zkHost,zkPort);
    processHandles.add(zkTunnel);
    if (NetworkUtility.isLocationReachable(timeout,10,1000,"localhost",freePort,isVerbose)) {
      String newHostPort=String.format("%s:%d","localhost",freePort);
      LOG.info("Connecting to zookeeper at " + newHostPort);
      newConf.put(ZK_CONNECTION_STRING,newHostPort);
      newConf.put(ROOT_ADDRESS,zkRoot);
    }
 else {
      throw new RuntimeException("Failed to setup the tunnel to Zookeeper Server");
    }
  }
 else {
    String newHostPort=String.format("%s:%d",zkHost,zkPort);
    LOG.info("Connecting to zookeeper at " + String.format("%s:%d",zkHost,zkPort));
    newConf.put(ZK_CONNECTION_STRING,newHostPort);
    newConf.put(ROOT_ADDRESS,zkRoot);
  }
  super.initialize(newConf);
}
