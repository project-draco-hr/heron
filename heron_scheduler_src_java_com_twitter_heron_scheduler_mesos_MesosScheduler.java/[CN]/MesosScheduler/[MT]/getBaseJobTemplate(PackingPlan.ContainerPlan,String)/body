{
  BaseJob jobDef=new BaseJob();
  jobDef.name="container_" + container.id + "_"+ UUID.randomUUID();
  jobDef.command=command;
  jobDef.retries=Integer.MAX_VALUE;
  jobDef.owner=context.getPropertyWithException(Constants.ROLE);
  jobDef.runAsUser=context.getPropertyWithException(Constants.ROLE);
  jobDef.description="Container for id: " + container.id + " for topology: "+ topologyName;
  jobDef.cpu=container.resource.cpu;
  jobDef.disk=container.resource.disk / Constants.MB;
  jobDef.mem=container.resource.ram / Constants.MB;
  jobDef.shell=true;
  jobDef.uris=new ArrayList<>();
  String topologyPath=context.getProperty(Constants.TOPOLOGY_PKG_URI);
  String heronCoreReleasePath=context.getProperty(Constants.HERON_CORE_RELEASE_URI);
  jobDef.uris.add(topologyPath);
  jobDef.uris.add(heronCoreReleasePath);
  return jobDef;
}
