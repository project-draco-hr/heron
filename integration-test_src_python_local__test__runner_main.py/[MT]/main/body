def main():
    ' main '
    root = logging.getLogger()
    root.setLevel(logging.DEBUG)
    conf_file = DEFAULT_TEST_CONF_FILE
    confString = pkgutil.get_data(__name__, conf_file)
    decoder = json.JSONDecoder(strict=False)
    conf = decoder.decode(confString)
    heronRepoDirectory = os.getcwd()
    args = dict()
    homeDirectory = os.path.expanduser('~')
    args['cluster'] = conf['cluster']
    args['topologyName'] = conf['topology']['topologyName']
    args['topologyClassPath'] = conf['topology']['topologyClassPath']
    args['workingDirectory'] = os.path.join(homeDirectory, '.herondata', 'topologies', conf['cluster'], getpass.getuser(), args['topologyName'])
    args['cliPath'] = os.path.expanduser(conf['heronCliPath'])
    args['outputFile'] = os.path.join(args['workingDirectory'], conf['topology']['outputFile'])
    args['readFile'] = os.path.join(args['workingDirectory'], conf['topology']['readFile'])
    args['testJarPath'] = os.path.join(heronRepoDirectory, conf['testJarPath'])
    start_time = time.time()
    (successes, failures) = runAllTests(args)
    elapsed_time = (time.time() - start_time)
    if (not failures):
        logging.info('Success: %s (all) tests passed', len(successes))
        logging.info('Elapsed time: %s', elapsed_time)
        sys.exit(0)
    else:
        logging.error('Fail: %s test failed', len(failures))
        logging.info('Failed Tests: ')
        logging.info('\n'.join(failures))
        sys.exit(1)
