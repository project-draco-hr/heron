{
  super.initialize(newConfig);
  this.config=newConfig;
  this.connectionString=Context.stateManagerConnectionString(newConfig);
  this.isSchedulerService=Context.schedulerService(newConfig);
  this.tunnelProcesses=new ArrayList<>();
  boolean isTunnelWhenNeeded=ZkContext.isTunnelNeeded(newConfig);
  if (isTunnelWhenNeeded) {
    Pair<String,List<Process>> tunneledResults=setupZkTunnel();
    String newConnectionString=tunneledResults.first;
    if (newConnectionString.isEmpty()) {
      throw new IllegalArgumentException("Bad connectionString: " + connectionString);
    }
    connectionString=newConnectionString;
    tunnelProcesses.addAll(tunneledResults.second);
  }
  client=getCuratorClient();
  LOG.info("Starting client to: " + connectionString);
  client.start();
  try {
    if (!client.blockUntilConnected(ZkContext.connectionTimeoutMs(newConfig),TimeUnit.MILLISECONDS)) {
      throw new RuntimeException("Failed to initialize CuratorClient");
    }
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Failed to initialize CuratorClient",e);
  }
  if (ZkContext.isInitializeTree(newConfig)) {
    initTree();
  }
}
