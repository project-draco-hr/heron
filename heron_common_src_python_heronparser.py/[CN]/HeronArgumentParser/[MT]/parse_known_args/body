def parse_known_args(self, args=None, namespace=None):
    (namespace, args) = super(HeronArgumentParser, self).parse_known_args(args, namespace)
    dict_ns = namespace.__dict__
    positional_args_map = self.get_positional_args()
    if (self.prog == 'heron'):
        try:
            for key in dict_ns:
                val = dict_ns[key]
                if ((val is not None) and isinstance(val, list) and (len(val) > 0)):
                    dict_ns[key] = val[0]
        except Exception:
            Log.warn('heronrc: unable to clobber arguments (%s,%s ) ', namespace, args)
            Log.debug(traceback.format_exc())
    else:
        Log.debug('sub parser expansion  %s %s', self.prog, args)
        for key in args:
            if (key in positional_args_map):
                raise ValueError('positional argument for  command {} : {} specified in heronrc'.format(self.prog, positional_args_map[key]))
    return (namespace, args)
