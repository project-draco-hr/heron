@staticmethod
def _get_dict_from_config(topology_config):
    'Converts Config protobuf message to python dictionary\n\n    Values are converted according to the rules below:\n\n    - Number string (e.g. "12" or "1.2") is appropriately converted to ``int`` or ``float``\n    - Boolean string ("true", "True", "false" or "False") is converted to built-in boolean type\n      (i.e. ``True`` or ``False``)\n    - Normal string is inserted to dict as is\n    - Serialized value is deserialized and inserted as a corresponding Python object\n    '
    config = {}
    config_serializer = PythonSerializer()
    for kv in topology_config.kvs:
        if kv.HasField('value'):
            assert (kv.type == topology_pb2.ConfigValueType.Value('STRING_VALUE'))
            if PhysicalPlanHelper._is_number(kv.value):
                config[kv.key] = PhysicalPlanHelper._get_number(kv.value)
            elif (kv.value.lower() in ('true', 'false')):
                config[kv.key] = (True if (kv.value.lower() == 'true') else False)
            else:
                config[kv.key] = kv.value
        elif (kv.HasField('serialized_value') and (kv.type == topology_pb2.ConfigValueType.Value('PYTHON_SERIALIZED_VALUE'))):
            config[kv.key] = config_serializer.deserialize(kv.serialized_value)
        else:
            assert kv.HasField('type')
            Log.error(('Unsupported config <key:value> found: %s, with type: %s' % (str(kv), str(kv.type))))
            continue
    return config
