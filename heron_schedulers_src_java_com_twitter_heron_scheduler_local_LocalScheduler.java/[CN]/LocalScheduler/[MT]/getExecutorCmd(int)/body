{
  int port1=NetworkUtils.getFreePort();
  int port2=NetworkUtils.getFreePort();
  int port3=NetworkUtils.getFreePort();
  int shellPort=NetworkUtils.getFreePort();
  int port4=NetworkUtils.getFreePort();
  if (port1 == -1 || port2 == -1 || port3 == -1) {
    throw new RuntimeException("Could not find available ports to start topology");
  }
  return String.format("./%s %d %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %d %s %s %d",localConfig.getExecutorBinary(),container,localConfig.getTopologyName(),localConfig.getTopologyId(),localConfig.getTopologyDef(),localConfig.getInstanceDistribution(),localConfig.getZkNode(),localConfig.getZkRoot(),localConfig.getTMasterBinary(),localConfig.getStmgrBinary(),localConfig.getMetricsMgrClasspath(),localConfig.getInstanceJvmOptionsBase64(),localConfig.getClasspath(),port1,port2,port3,localConfig.getInternalConfigFilename(),localConfig.getComponentRamMap(),localConfig.getComponentJVMOptionsBase64(),localConfig.getPkgType(),localConfig.getTopologyJarFile(),localConfig.getJavaHome(),shellPort,localConfig.getLogDir(),localConfig.getHeronShellBinary(),port4);
}
