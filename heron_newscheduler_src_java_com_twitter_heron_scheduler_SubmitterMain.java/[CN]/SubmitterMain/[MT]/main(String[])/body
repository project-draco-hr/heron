{
  String cluster=args[0];
  String role=args[1];
  String environ=args[2];
  String heronHome=args[3];
  String configPath=args[4];
  String configOverrideEncoded=args[5];
  String topologyPackage=args[6];
  String topologyDefnFile=args[7];
  String originalPackageFile=args[8];
  System.out.println(heronHome + " " + configPath);
  Config.Builder defaultsConfig=Config.newBuilder().putAll(ClusterDefaults.getDefaults()).putAll(ClusterConfig.loadConfig(heronHome,configPath));
  Config.Builder commandLineConfig=Config.newBuilder().put(Keys.CLUSTER,cluster).put(Keys.ROLE,role).put(Keys.ENVIRON,environ);
  String pkgType=FileUtils.isOriginalPackageJar(FileUtils.getBaseName(originalPackageFile)) ? "jar" : "tar";
  TopologyAPI.Topology topology=TopologyUtils.getTopology(topologyDefnFile);
  Config.Builder topologyConfig=Config.newBuilder().put(Keys.TOPOLOGY_ID,topology.getId()).put(Keys.TOPOLOGY_NAME,topology.getName()).put(Keys.TOPOLOGY_DEFINITION_FILE,topologyDefnFile).put(Keys.TOPOLOGY_PACKAGE_FILE,topologyPackage).put(Keys.TOPOLOGY_JAR_FILE,originalPackageFile).put(Keys.TOPOLOGY_PACKAGE_TYPE,pkgType);
  Config config=Config.expand(Config.newBuilder().putAll(defaultsConfig.build()).putAll(commandLineConfig.build()).putAll(topologyConfig.build()).build());
  LOG.info("Static config loaded successfully ");
  LOG.info(config.toString());
  if (!submitTopology(config,topology)) {
    Runtime.getRuntime().exit(1);
  }
}
