{
  String cluster=args[0];
  String role=args[1];
  String environ=args[2];
  String heronHome=args[3];
  String configPath=args[4];
  String configOverrideEncoded=args[5];
  String topologyPackage=args[6];
  String topologyDefnFile=args[7];
  String topologyJarFile=args[8];
  System.out.println(heronHome + " " + configPath);
  TopologyAPI.Topology topology=TopologyUtils.getTopology(topologyDefnFile);
  Config config=Config.expand(Config.newBuilder().putAll(defaultConfigs(heronHome,configPath)).putAll(commandLineConfigs(cluster,role,environ)).putAll(topologyConfigs(topologyPackage,topologyJarFile,topologyDefnFile,topology)).build());
  LOG.info("Static config loaded successfully ");
  LOG.info(config.toString());
  String statemgrClass=Context.stateManagerClass(config);
  IStateManager statemgr=(IStateManager)Class.forName(statemgrClass).newInstance();
  statemgr.initialize(config);
  String launcherClass=Context.launcherClass(config);
  ILauncher launcher=(ILauncher)Class.forName(launcherClass).newInstance();
  String packingClass=Context.packingClass(config);
  IPacking packing=(IPacking)Class.forName(packingClass).newInstance();
  UploadRunner uploadRunner=new UploadRunner(config);
  String topologyName=topology.getName();
  boolean isSuccessful=false;
  try {
    boolean isValid=validateSubmit(statemgr,topologyName);
    if (isValid) {
      LOG.log(Level.INFO,"Topology {0} to be submitted",topologyName);
      isSuccessful=submitTopology(config,topology,statemgr,launcher,packing,uploadRunner);
    }
  }
  finally {
    statemgr.close();
    if (!isSuccessful) {
      uploadRunner.undo();
      launcher.undo();
      LOG.log(Level.SEVERE,"Failed to submit topology {0}. Existing",topologyName);
      System.exit(1);
    }
 else {
      LOG.log(Level.INFO,"Topology {0} submitted successfully",topologyName);
      System.exit(0);
    }
  }
}
