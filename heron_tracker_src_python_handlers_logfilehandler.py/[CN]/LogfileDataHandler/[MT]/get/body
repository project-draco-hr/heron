@tornado.gen.coroutine
def get(self):
    try:
        cluster = self.get_argument_cluster()
        environ = self.get_argument_environ()
        topology_name = self.get_argument_topology()
        instance = self.get_argument_instance()
        offset = self.get_argument_offset()
        length = self.get_argument_length()
        topology_info = self.tracker.getTopologyInfo(topology_name, cluster, environ)
        stmgr_id = topology_info['physical_plan']['instances'][instance]['stmgrId']
        stmgr = topology_info['physical_plan']['stmgrs'][stmgr_id]
        host = stmgr['host']
        shell_port = stmgr['shell_port']
        logfile_data_url = utils.make_shell_logfile_data_url(host, shell_port, instance, offset, length)
        http_client = tornado.httpclient.AsyncHTTPClient()
        response = yield http_client.fetch(logfile_data_url)
        self.write_success_response(json.loads(response.body))
        self.finish()
    except Exception as e:
        traceback.print_exc()
        self.write_error_response(e)
