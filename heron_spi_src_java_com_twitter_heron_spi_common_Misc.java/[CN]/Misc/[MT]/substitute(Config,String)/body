{
  String trimmedPath=pathString.trim();
  if (isURL(trimmedPath)) {
    return substituteURL(config,trimmedPath);
  }
  String fileSeparator=Matcher.quoteReplacement(System.getProperty("file.separator"));
  List<String> fixedList=Arrays.asList(trimmedPath.split(fileSeparator));
  List<String> list=new LinkedList<String>(fixedList);
  String homePath=FileSystemView.getFileSystemView().getHomeDirectory().getAbsolutePath();
  for (int i=0; i < list.size(); i++) {
    String elem=list.get(i);
    if ("${HOME}".equals(elem)) {
      list.set(i,homePath);
    }
 else     if ("~".equals(elem)) {
      list.set(i,homePath);
    }
 else     if ("${JAVA_HOME}".equals(elem)) {
      String javaPath=System.getenv("JAVA_HOME");
      if (javaPath != null) {
        list.set(i,javaPath);
      }
    }
 else     if ("${HERON_HOME}".equals(elem)) {
      list.set(i,Context.heronHome(config));
    }
 else     if ("${HERON_BIN}".equals(elem)) {
      list.set(i,Context.heronBin(config));
    }
 else     if ("${HERON_CONF}".equals(elem)) {
      list.set(i,Context.heronConf(config));
    }
 else     if ("${HERON_LIB}".equals(elem)) {
      list.set(i,Context.heronLib(config));
    }
 else     if ("${HERON_DIST}".equals(elem)) {
      list.set(i,Context.heronDist(config));
    }
 else     if ("${HERON_SANDBOX_HOME}".equals(elem)) {
      list.set(i,Context.heronSandboxHome(config));
    }
 else     if ("${HERON_SANDBOX_BIN}".equals(elem)) {
      list.set(i,Context.heronSandboxBin(config));
    }
 else     if ("${HERON_SANDBOX_CONF}".equals(elem)) {
      list.set(i,Context.heronSandboxConf(config));
    }
 else     if ("${HERON_SANDBOX_LIB}".equals(elem)) {
      list.set(i,Context.heronSandboxLib(config));
    }
 else     if ("${CLUSTER}".equals(elem)) {
      list.set(i,Context.cluster(config));
    }
 else     if ("${ROLE}".equals(elem)) {
      list.set(i,Context.role(config));
    }
 else     if ("${TOPOLOGY}".equals(elem)) {
      list.set(i,Context.topologyName(config));
    }
 else     if ("${ENVIRON}".equals(elem)) {
      list.set(i,Context.environ(config));
    }
  }
  return combinePaths(list);
}
