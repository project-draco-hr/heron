'module for single-thread Heron Instance in python'
import collections
import logging
import os
import sys
import traceback
import signal
import yaml
from heron.common.src.python.basics import GatewayLooper
from heron.common.src.python.config import system_config
from heron.common.src.python.utils import log
from heron.common.src.python.utils.metrics import GatewayMetrics, PyMetrics, MetricsCollector
from heron.common.src.python.utils.misc import HeronCommunicator
from heron.common.src.python.network import create_socket_options
from heron.proto import physical_plan_pb2, stmgr_pb2
from heron.instance.src.python.network import MetricsManagerClient, SingleThreadStmgrClient
from heron.instance.src.python.basics import SpoutInstance, BoltInstance
import heron.common.src.python.constants as constants
Log = log.Log
AssignedInstance = collections.namedtuple('AssignedInstance', 'is_spout, protobuf, py_class')
if (__name__ == '__main__'):
    main()
