def convert_execution_state(execution_state):
    '\n  Old version of execution state was specific to aurora.\n  This method is for backward compatibility.\n  Converts the old execution state to new one\n  and returns it.\n  If execution_state is the new one, simply returns it.\n  '
    if (not execution_state.HasField('aurora')):
        if execution_state.HasField('dc'):
            execution_state.cluster = execution_state.dc
        return execution_state
    aurora = execution_state.aurora
    job = aurora.jobs[0]
    dc = job.dc
    environ = job.environ
    role = job.user
    release_username = aurora.release_username
    release_tag = aurora.release_tag
    release_version = aurora.release_version
    uploader_version = aurora.packer_version
    estate = ExecutionState()
    estate.topology_name = execution_state.topology_name
    estate.topology_id = execution_state.topology_id
    estate.submission_time = execution_state.submission_time
    estate.submission_user = execution_state.submission_user
    estate.release_state.release_username = release_username
    estate.release_state.release_tag = release_tag
    estate.release_state.release_version = release_version
    estate.release_state.uploader_version = uploader_version
    estate.cluster = dc
    estate.environ = environ
    estate.role = role
    assert estate.IsInitialized()
    return estate
