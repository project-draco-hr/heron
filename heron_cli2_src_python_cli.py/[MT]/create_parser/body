def create_parser():
    parser = argparse.ArgumentParser(epilog='Documentation at http://go/heron')
    subparsers = parser.add_subparsers()
    submit_parser = subparsers.add_parser('submit', help='Submit a topology', add_help=False)
    submit_parser.add_argument('config-overrides', help='Override scheduler config to provide dc/role/env')
    submit_parser.add_argument('filepath', help='jar or tar filepath')
    submit_parser.add_argument('classname', help='classname')
    submit_parser.add_argument('--config-path', help='Scheduler config path', default=os.path.join(get_heron_dir(), 'conf/com/twitter/aurora'))
    submit_parser.add_argument('--config-loader', help='Scheduler config loader classname', default='com.twitter.heron.scheduler.aurora.AuroraConfigLoader')
    submit_parser.add_argument('--config-property', help='scheduler config properties', action='append', default=[])
    submit_parser.add_argument('--deactivated', help='Deploy topology in deactivated initial state', action='store_true')
    submit_parser.add_argument('--heron-verbose', action='store_true')
    submit_parser.set_defaults(command='submit')
    kill_parser = subparsers.add_parser('kill', help='Kill a topology')
    kill_parser.add_argument('config-overrides', help='Override killer config to provide dc/role/env')
    kill_parser.add_argument('topology', help='topology name')
    kill_parser.add_argument('--config-path', help='Killer config path', default=os.path.join(get_heron_dir(), 'conf/com/twitter/aurora'))
    kill_parser.add_argument('--config-loader', help='Killer config loader classname', default='com.twitter.heron.scheduler.aurora.AuroraConfigLoader')
    kill_parser.add_argument('--config-property', help='Killer config properties', action='append', default=[])
    kill_parser.add_argument('--heron-batch-size', type=int, help='Killer batch-size option')
    kill_parser.add_argument('--heron-verbose', action='store_true')
    kill_parser.set_defaults(command='kill')
    activate_parser = subparsers.add_parser('activate', help='Activate a topology')
    activate_parser.add_argument('config-overrides', help='Override activator config to provide dc/role/env')
    activate_parser.add_argument('topology', help='topology name')
    activate_parser.add_argument('--config-path', help='Activator config path', default=os.path.join(get_heron_dir(), 'conf/com/twitter/aurora'))
    activate_parser.add_argument('--config-loader', help='Activator config loader classname', default='com.twitter.heron.scheduler.aurora.AuroraConfigLoader')
    activate_parser.add_argument('--config-property', help='Activator config properties', action='append', default=[])
    activate_parser.add_argument('--heron-batch-size', type=int, help='Activator batch-size option')
    activate_parser.add_argument('--heron-verbose', action='store_true')
    activate_parser.set_defaults(command='activate')
    deactivate_parser = subparsers.add_parser('deactivate', help='Deactivate a topology')
    deactivate_parser.add_argument('config-overrides', help='Override deactivator config to provide dc/role/env')
    deactivate_parser.add_argument('topology', help='topology name')
    deactivate_parser.add_argument('--config-path', help='Deactivator config path', default=os.path.join(get_heron_dir(), 'conf/com/twitter/aurora'))
    deactivate_parser.add_argument('--config-loader', help='Deactivator config loader classname', default='com.twitter.heron.scheduler.aurora.AuroraConfigLoader')
    deactivate_parser.add_argument('--config-property', help='Deactivator config properties', action='append', default=[])
    deactivate_parser.add_argument('--heron-batch-size', type=int, help='Deactivator batch-size option')
    deactivate_parser.add_argument('--heron-verbose', action='store_true')
    deactivate_parser.set_defaults(command='deactivate')
    restart_parser = subparsers.add_parser('restart', help='Restart a topology')
    restart_parser.add_argument('config-overrides', help='Override restarter config to provide dc/role/env')
    restart_parser.add_argument('topology', help='topology name')
    restart_parser.add_argument('shard', nargs='?', type=int, default=(-1), help='shard id to be restarted')
    restart_parser.add_argument('--config-path', help='Restarter config path', default=os.path.join(get_heron_dir(), 'conf/com/twitter/aurora'))
    restart_parser.add_argument('--config-loader', help='Restarter config loader classname', default='com.twitter.heron.scheduler.aurora.AuroraConfigLoader')
    restart_parser.add_argument('--config-property', help='Restarter config properties', action='append', default=[])
    restart_parser.add_argument('--heron-batch-size', type=int, help='Restarter batch-size option')
    restart_parser.add_argument('--heron-verbose', action='store_true')
    restart_parser.set_defaults(command='restart')
    classpath_parser = subparsers.add_parser('classpath', help='Print classpath of heron-cli')
    classpath_parser.add_argument('--heron-verbose', action='store_true')
    classpath_parser.set_defaults(command='classpath')
    version_parser = subparsers.add_parser('version', help='Print version of heron-cli')
    version_parser.add_argument('--heron-verbose', action='store_true')
    version_parser.set_defaults(command='version')
    return parser
