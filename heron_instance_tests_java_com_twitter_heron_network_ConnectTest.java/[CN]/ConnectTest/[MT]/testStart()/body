{
  ServerSocketChannel serverSocketChannel=ServerSocketChannel.open();
  serverSocketChannel.socket().bind(new InetSocketAddress(HOST,serverPort));
  SocketChannel socketChannel=null;
  try {
    runStreamManagerClient();
    socketChannel=serverSocketChannel.accept();
    configure(socketChannel);
    socketChannel.configureBlocking(false);
    close(serverSocketChannel);
    IncomingPacket incomingPacket=new IncomingPacket();
    while (incomingPacket.readFromChannel(socketChannel) != 0) {
    }
    String typeName=incomingPacket.unpackString();
    REQID rid=incomingPacket.unpackREQID();
    OutgoingPacket outgoingPacket=new OutgoingPacket(rid,UnitTestHelper.getRegisterInstanceResponse());
    outgoingPacket.writeToChannel(socketChannel);
    for (int i=0; i < Constants.RETRY_TIMES; i++) {
      InstanceControlMsg instanceControlMsg=inControlQueue.poll();
      if (instanceControlMsg != null) {
        nioLooper.exitLoop();
        threadsPool.shutdownNow();
        PhysicalPlanHelper physicalPlanHelper=instanceControlMsg.getNewPhysicalPlanHelper();
        Assert.assertEquals("test-bolt",physicalPlanHelper.getMyComponent());
        Assert.assertEquals(InetAddress.getLocalHost().getHostName(),physicalPlanHelper.getMyHostname());
        Assert.assertEquals(0,physicalPlanHelper.getMyInstanceIndex());
        Assert.assertEquals(1,physicalPlanHelper.getMyTaskId());
        break;
      }
 else {
        SysUtils.sleep(Constants.RETRY_INTERVAL_MS);
      }
    }
  }
 catch (  ClosedChannelException ignored) {
  }
 finally {
    close(socketChannel);
  }
}
