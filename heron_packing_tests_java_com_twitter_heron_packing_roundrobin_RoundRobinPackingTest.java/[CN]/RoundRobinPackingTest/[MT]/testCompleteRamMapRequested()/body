{
  int numContainers=2;
  int spoutParallelism=4;
  int boltParallelism=3;
  com.twitter.heron.api.Config topologyConfig=new com.twitter.heron.api.Config();
  topologyConfig.put(com.twitter.heron.api.Config.TOPOLOGY_STMGRS,numContainers);
  long containerRam=Long.MAX_VALUE;
  long boltRam=1L * Constants.GB;
  long spoutRam=2L * Constants.GB;
  topologyConfig.setContainerRamRequested(containerRam);
  topologyConfig.setComponentRam(BOLT_NAME,boltRam);
  topologyConfig.setComponentRam(SPOUT_NAME,spoutRam);
  TopologyAPI.Topology topologyExplicitRamMap=getTopology(spoutParallelism,boltParallelism,topologyConfig);
  PackingPlan packingPlanExplicitRamMap=getRoundRobinPackingPlan(topologyExplicitRamMap);
  for (  PackingPlan.ContainerPlan containerPlan : packingPlanExplicitRamMap.getContainers().values()) {
    Assert.assertNotEquals(containerRam,containerPlan.getResource().ram);
    for (    PackingPlan.InstancePlan instancePlan : containerPlan.getInstances().values()) {
      if (instancePlan.getComponentName().equals(BOLT_NAME)) {
        Assert.assertEquals(boltRam,instancePlan.getResource().ram);
      }
      if (instancePlan.getComponentName().equals(SPOUT_NAME)) {
        Assert.assertEquals(spoutRam,instancePlan.getResource().ram);
      }
    }
  }
}
