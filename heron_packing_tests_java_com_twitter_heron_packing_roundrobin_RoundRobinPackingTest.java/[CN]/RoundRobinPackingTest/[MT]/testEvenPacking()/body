{
  int numContainers=2;
  int componentParallelism=4;
  com.twitter.heron.api.Config topologyConfig=new com.twitter.heron.api.Config();
  topologyConfig.put(com.twitter.heron.api.Config.TOPOLOGY_STMGRS,numContainers);
  TopologyAPI.Topology topology=getTopology(componentParallelism,componentParallelism,topologyConfig);
  int numInstance=TopologyUtils.getTotalInstance(topology);
  Assert.assertEquals(2 * componentParallelism,numInstance);
  PackingPlan output=getRoundRobinPackingPlan(topology);
  Assert.assertEquals(numContainers,output.getContainers().size());
  Assert.assertEquals((Integer)numInstance,output.getInstanceCount());
  for (  PackingPlan.ContainerPlan container : output.getContainers()) {
    Assert.assertEquals(numInstance / numContainers,container.getInstances().size());
    assertComponentCount(container,"spout",2);
    assertComponentCount(container,"bolt",2);
  }
}
