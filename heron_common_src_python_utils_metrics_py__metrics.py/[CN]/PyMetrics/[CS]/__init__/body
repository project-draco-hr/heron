def __init__(self, metrics_collector):
    self.process = psutil.Process()
    self.sys_cpu_time = AssignableMetrics(0)
    self.user_cpu_time = AssignableMetrics(0)
    self.threads = AssignableMetrics(0)
    self.fd_nums = AssignableMetrics(0)
    self.num_threads = AssignableMetrics([])
    self.physical_memory = AssignableMetrics(0)
    self.virtual_memory = AssignableMetrics(0)
    (self.g1_count, self.g1_threshold) = (AssignableMetrics(0), AssignableMetrics(0))
    (self.g2_count, self.g2_threshold) = (AssignableMetrics(0), AssignableMetrics(0))
    (self.g3_count, self.g3_threshold) = (AssignableMetrics(0), AssignableMetrics(0))
    PY_SYS_CPU_TIME = '__py-sys-cpu-time-secs'
    PY_USER_CPU_TIME = '__py-user-cpu-time-secs'
    PY_FD_NUMS = '__py-file-descriptors-number'
    PY_PHYSICAL_MEMORY = '__py-physical-memory-byte'
    PY_VIRTUAL_MEMORY = '__py-virtual-memory-byte'
    PY_GC_GENERATION_1_COUNT = '__py-generation-1-count'
    PY_GC_GENERATION_2_COUNT = '__py-generation-2-count'
    PY_GC_GENERATION_3_COUNT = '__py-generation-3-count'
    PY_GC_GENERATION_1_THRESHOLD = '__py-generation-1-collection-threshold'
    PY_GC_GENERATION_2_THRESHOLD = '__py-generation-2-collection-threshold'
    PY_GC_GENERATION_3_THRESHOLD = '__py-generation-3-collection-threshold'
    self.metrics = {PY_SYS_CPU_TIME: self.sys_cpu_time, PY_USER_CPU_TIME: self.user_cpu_time, PY_FD_NUMS: self.fd_nums, PY_PHYSICAL_MEMORY: self.physical_memory, PY_VIRTUAL_MEMORY: self.virtual_memory, PY_GC_GENERATION_1_COUNT: self.g1_count, PY_GC_GENERATION_2_COUNT: self.g2_count, PY_GC_GENERATION_3_COUNT: self.g3_count, PY_GC_GENERATION_1_THRESHOLD: self.g1_threshold, PY_GC_GENERATION_2_THRESHOLD: self.g2_threshold, PY_GC_GENERATION_3_THRESHOLD: self.g3_threshold, }
    super(PyMetrics, self).__init__(self.metrics)
    sys_config = system_config.get_sys_config()
    interval = float(sys_config[constants.HERON_METRICS_EXPORT_INTERVAL_SEC])
    self.register_metrics(metrics_collector, interval)
