{
  Map<Integer,List<String>> allocation=new HashMap<>();
  ArrayList<Container> containers=new ArrayList<>();
  ArrayList<RamRequirement> ramRequirements=getSortedRAMInstances(parallelismMap);
  int globalTaskIndex=firstTaskIndex;
  for (  RamRequirement ramRequirement : ramRequirements) {
    String component=ramRequirement.getComponentName();
    int numInstance=parallelismMap.get(component);
    for (int j=0; j < numInstance; j++) {
      Resource instanceResource=this.defaultInstanceResources.cloneWithRam(ramRequirement.getRamRequirement());
      int containerId=placeFFDInstance(containers,instanceResource) + firstContainerIndex - 1;
      List<String> instances=allocation.get(containerId);
      if (instances == null) {
        instances=new ArrayList<>();
      }
      instances.add(PackingUtils.getInstanceId(containerId,component,globalTaskIndex++,j));
      allocation.put(containerId,instances);
    }
  }
  return allocation;
}
