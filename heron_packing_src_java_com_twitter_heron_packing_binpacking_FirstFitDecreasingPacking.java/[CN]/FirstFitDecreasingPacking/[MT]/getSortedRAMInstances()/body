{
  ArrayList<RamRequirement> ramRequirements=new ArrayList<>();
  Map<String,Integer> parallelismMap=TopologyUtils.getComponentParallelism(topology);
  Map<String,Long> ramMap=TopologyUtils.getComponentRamMapConfig(topology);
  for (  String component : parallelismMap.keySet()) {
    if (ramMap.containsKey(component)) {
      if (!isValidInstance(new Resource(instanceCpuDefault,ramMap.get(component),instanceDiskDefault))) {
        return null;
      }
 else {
        ramRequirements.add(new RamRequirement(component,ramMap.get(component)));
      }
    }
 else {
      if (!isValidInstance(new Resource(instanceCpuDefault,instanceRamDefault,instanceDiskDefault))) {
        return null;
      }
 else {
        ramRequirements.add(new RamRequirement(component,instanceRamDefault));
      }
    }
  }
  Collections.sort(ramRequirements,Collections.reverseOrder());
  return ramRequirements;
}
