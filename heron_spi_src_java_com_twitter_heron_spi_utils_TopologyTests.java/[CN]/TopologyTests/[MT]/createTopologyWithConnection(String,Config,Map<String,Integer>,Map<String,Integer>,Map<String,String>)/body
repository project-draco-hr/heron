{
  TopologyBuilder builder=new TopologyBuilder();
  BaseRichSpout baseSpout=new BaseRichSpout(){
    public void declareOutputFields(    OutputFieldsDeclarer declarer){
      declarer.declare(new Fields("field1"));
    }
    public void open(    Map conf,    TopologyContext context,    SpoutOutputCollector collector){
    }
    public void nextTuple(){
    }
  }
;
  BaseBasicBolt basicBolt=new BaseBasicBolt(){
    public void execute(    Tuple input,    BasicOutputCollector collector){
    }
    public void declareOutputFields(    OutputFieldsDeclarer declarer){
    }
  }
;
  for (  String spout : spouts.keySet()) {
    builder.setSpout(spout,baseSpout,spouts.get(spout));
  }
  for (  String bolt : bolts.keySet()) {
    BoltDeclarer boltDeclarer=builder.setBolt(bolt,basicBolt,bolts.get(bolt));
    if (connections.containsKey(bolt)) {
      boltDeclarer.shuffleGrouping(connections.get(bolt));
    }
  }
  HeronTopology heronTopology=builder.createTopology();
  return heronTopology.setName(topologyName).setConfig(heronConfig).setState(TopologyAPI.TopologyState.RUNNING).getTopology();
}
