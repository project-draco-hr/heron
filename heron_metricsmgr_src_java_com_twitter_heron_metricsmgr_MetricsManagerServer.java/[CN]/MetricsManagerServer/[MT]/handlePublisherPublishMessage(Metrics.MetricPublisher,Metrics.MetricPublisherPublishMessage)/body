{
  if (message.getMetricsCount() <= 0 && message.getExceptionsCount() <= 0) {
    LOG.log(Level.SEVERE,"Publish message has no metrics nor exceptions for message from hostname: {0}," + " component_name: {1}, port: {2}, instance_id: {3}, instance_index: {4}",new Object[]{request.getHostname(),request.getComponentName(),request.getPort(),request.getInstanceId(),request.getInstanceIndex()});
    return;
  }
  String source=String.format("%s:%d/%s/%s",request.getHostname(),request.getPort(),request.getComponentName(),request.getInstanceId());
  List<MetricsInfo> metricsInfos=new ArrayList<MetricsInfo>(message.getMetricsCount());
  for (  Metrics.MetricDatum metricDatum : message.getMetricsList()) {
    MetricsInfo info=new MetricsInfo(metricDatum.getName(),metricDatum.getValue());
    metricsInfos.add(info);
  }
  List<ExceptionInfo> exceptionInfos=new ArrayList<ExceptionInfo>(message.getExceptionsCount());
  for (  Metrics.ExceptionData exceptionData : message.getExceptionsList()) {
    ExceptionInfo exceptionInfo=new ExceptionInfo(exceptionData.getStacktrace(),exceptionData.getLasttime(),exceptionData.getFirsttime(),exceptionData.getCount(),exceptionData.getLogging());
    exceptionInfos.add(exceptionInfo);
  }
  LOG.info(String.format("%d MetricsInfo and %d ExceptionInfo to push",metricsInfos.size(),exceptionInfos.size()));
  serverMetricsCounters.scope(SERVER_METRICS_RECEIVED).incrBy(metricsInfos.size());
  serverMetricsCounters.scope(SERVER_EXCEPTIONS_RECEIVED).incrBy(exceptionInfos.size());
  MetricsRecord record=new MetricsRecord(source,metricsInfos,exceptionInfos);
  for (  Communicator<MetricsRecord> c : metricsSinkCommunicators) {
    c.offer(record);
  }
}
