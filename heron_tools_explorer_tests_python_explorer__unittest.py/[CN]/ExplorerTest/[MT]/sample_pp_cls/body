def sample_pp_cls(self):
    clsp = ['metrics', 'local/rli/default', 'ExclamationTopology']
    clco = ['containers', 'local/rli/default', 'ExclamationTopology']
    good_cls = []
    for cl in (clsp, clco):
        self.acc_with_optional_args(cl, good_cls)
    good_cls.append((clco + ['--cid 1']))
    bad_cl1 = ['metrics', 'local/rli/defult', 'ExclamationTopology']
    return (good_cls, bad_cl1)
