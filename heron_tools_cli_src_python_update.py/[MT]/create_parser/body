def create_parser(subparsers):
    ' Create the parse for the update command '
    parser = subparsers.add_parser('update', help='Update a topology', usage=('%(prog)s [options] cluster/[role]/[env] <topology-name> ' + '--component-parallelism <name:value>'), add_help=False)
    args.add_titles(parser)
    args.add_cluster_role_env(parser)
    args.add_topology(parser)

    def parallelism_type(value):
        pattern = re.compile('^[\\w-]+:[\\d]+$')
        if (not pattern.match(value)):
            raise argparse.ArgumentTypeError(('Invalid syntax for component parallelism (<component_name>:<value>): %s' % value))
        return value
    parser.add_argument('--component-parallelism', action='append', type=parallelism_type, required=True, help=('Component name and the new parallelism value ' + 'colon-delimited: [component_name]:[parallelism]'))
    args.add_config(parser)
    args.add_verbose(parser)
    parser.set_defaults(subcommand='update')
    return parser
